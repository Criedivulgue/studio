rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Users:
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isSuperAdmin();
    }
    
    // Contacts:
    match /contacts/{contactId} {
      // Anyone can create a contact (e.g., a potential lead from a public page).
      allow create: if true;
      
      // Only the owner admin or a superadmin can read, update, or delete it.
      allow read, update, delete: if (isSignedIn() && isOwner(resource.data.ownerId)) || isSuperAdmin();
    }

    // Global Conversation Collection
    match /conversations/{conversationId} {
      // Anyone can create a conversation.
      allow create: if true;
      
      // Anyone can read a conversation document (needed for anon users to listen).
      allow read: if true;
      
      // Only the assigned admin and superadmins can update or delete the conversation.
      allow update, delete: if (isSignedIn() && isOwner(resource.data.adminId)) || isSuperAdmin();

      match /messages/{messageId} {
        // Anyone can read or create messages. Security through obscurity of conversationId.
        allow read, create: if true;
        
        // Messages are immutable to maintain a true record of the chat.
        allow update, delete: if false;
      }
    }
  }
}
